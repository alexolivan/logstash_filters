filter {
  if "SuricataIDPS" in [tags] {

    grok {
      match => [ "message", "(?<syslog_json>{.*}$)" ]
    }
    json {
      source => syslog_json
    }

    date {
      match => [ "timestamp", "ISO8601" ]
    }

    ruby {
      code => "if event['event_type'] == 'fileinfo'; event['fileinfo']['type']=event['fileinfo']['magic'].to_s.split(',')[0]; end;" 
    }
  
    if [src_ip]  {
      geoip {
        source => "src_ip"
        target => "geoip"
        database => "/opt/logstash/vendor/geoip/GeoLiteCity.dat"
        add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
        add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
      }
      mutate {
        convert => [ "[geoip][coordinates]", "float" ]
      }
      if ![geoip.ip] {
        if [dest_ip]  {
          geoip {
            source => "dest_ip"
            target => "geoip"
            database => "/opt/logstash/vendor/geoip/GeoLiteCity.dat"
            add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
            add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
          }
          mutate {
            convert => [ "[geoip][coordinates]", "float" ]
          }
        }
      }
    }

    if "_grokparsefailure" not in [tags] and "_jsonparsefailure" not in [tags] {
        mutate {
            remove_field => "message"
            remove_field => "syslog_json"
            add_tag => "suricatamatch"
        }
    }

    if "_grokparsefailure" in [tags] {
      drop { }
    }

  }

}

