filter {
  if "postfix" in [tags] {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
    }

    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM  dd HH:mm:ss", "d HH:mm:ss", "dd HH:mm:ss" ]
      locale => "en"
    }

    # grok log lines by program name (listed alpabetically)
    if [syslog_program] =~ /^postfix.*\/anvil$/ {
        grok {
            # patterns_dir   => "/etc/logstash/patterns.d"
            match          => [ "syslog_message", "%{POSTFIX_ANVIL}" ]
            tag_on_failure => [ "_grok_postfix_anvil_nomatch" , "_grokparsefailure" ]
            add_tag        => [ "_grok_postfix_success" ]
        }
    } else if [syslog_program] =~ /^postfix.*\/bounce$/ {
        grok {
            # patterns_dir   => "/etc/logstash/patterns.d"
            match          => [ "syslog_message", "%{POSTFIX_BOUNCE}" ]
            tag_on_failure => [ "_grok_postfix_bounce_nomatch" , "_grokparsefailure" ]
            add_tag        => [ "_grok_postfix_success" ]
        }
    } else if [syslog_program] =~ /^postfix.*\/cleanup$/ {
        grok {
            # patterns_dir   => "/etc/logstash/patterns.d"
            match          => [ "syslog_message", "%{POSTFIX_CLEANUP}" ]
            tag_on_failure => [ "_grok_postfix_cleanup_nomatch" , "_grokparsefailure" ]
            add_tag        => [ "_grok_postfix_success" ]
        }
    } else if [syslog_program] =~ /^postfix.*\/dnsblog$/ {
        grok {
            # patterns_dir   => "/etc/logstash/patterns.d"
            match          => [ "syslog_message", "%{POSTFIX_DNSBLOG}" ]
            tag_on_failure => [ "_grok_postfix_dnsblog_nomatch" , "_grokparsefailure" ]
            add_tag        => [ "_grok_postfix_success" ]
        }
    } else if [syslog_program] =~ /^postfix.*\/local$/ {
        grok {
            # patterns_dir   => "/etc/logstash/patterns.d"
            match          => [ "syslog_message", "%{POSTFIX_LOCAL}" ]
            tag_on_failure => [ "_grok_postfix_local_nomatch" , "_grokparsefailure" ]
            add_tag        => [ "_grok_postfix_success" ]
        }
    } else if [syslog_program] =~ /^postfix.*\/master$/ {
        grok {
            # patterns_dir   => "/etc/logstash/patterns.d"
            match          => [ "syslog_message", "%{POSTFIX_MASTER}" ]
            tag_on_failure => [ "_grok_postfix_master_nomatch" , "_grokparsefailure" ]
            add_tag        => [ "_grok_postfix_success" ]
        }
    } else if [syslog_program] =~ /^postfix.*\/pickup$/ {
        grok {
            # patterns_dir   => "/etc/logstash/patterns.d"
            match          => [ "syslog_message", "%{POSTFIX_PICKUP}" ]
            tag_on_failure => [ "_grok_postfix_pickup_nomatch" , "_grokparsefailure" ]
            add_tag        => [ "_grok_postfix_success" ]
        }
    } else if [syslog_program] =~ /^postfix.*\/pipe$/ {
        grok {
            # patterns_dir   => "/etc/logstash/patterns.d"
            match          => [ "syslog_message", "%{POSTFIX_PIPE}" ]
            tag_on_failure => [ "_grok_postfix_pipe_nomatch" , "_grokparsefailure" ]
            add_tag        => [ "_grok_postfix_success" ]
        }
    } else if [syslog_program] =~ /^postfix.*\/postdrop$/ {
        grok {
            # patterns_dir   => "/etc/logstash/patterns.d"
            match          => [ "syslog_message", "%{POSTFIX_POSTDROP}" ]
            tag_on_failure => [ "_grok_postfix_postdrop_nomatch" , "_grokparsefailure" ]
            add_tag        => [ "_grok_postfix_success" ]
        }
    } else if [syslog_program] =~ /^postfix.*\/postscreen$/ {
        grok {
            # patterns_dir   => "/etc/logstash/patterns.d"
            match          => [ "syslog_message", "%{POSTFIX_POSTSCREEN}" ]
            tag_on_failure => [ "_grok_postfix_postscreen_nomatch" , "_grokparsefailure" ]
            add_tag        => [ "_grok_postfix_success" ]
        }
    } else if [syslog_program] =~ /^postfix.*\/qmgr$/ {
        grok {
            # patterns_dir   => "/etc/logstash/patterns.d"
            match          => [ "syslog_message", "%{POSTFIX_QMGR}" ]
            tag_on_failure => [ "_grok_postfix_qmgr_nomatch" , "_grokparsefailure" ]
            add_tag        => [ "_grok_postfix_success" ]
        }
    } else if [syslog_program] =~ /^postfix.*\/scache$/ {
        grok {
            # patterns_dir   => "/etc/logstash/patterns.d"
            match          => [ "syslog_message", "%{POSTFIX_SCACHE}" ]
            tag_on_failure => [ "_grok_postfix_scache_nomatch" , "_grokparsefailure" ]
            add_tag        => [ "_grok_postfix_success" ]
        }
    } else if [syslog_program] =~ /^postfix.*\/sendmail$/ {
        grok {
            # patterns_dir   => "/etc/logstash/patterns.d"
            match          => [ "syslog_message", "%{POSTFIX_SENDMAIL}" ]
            tag_on_failure => [ "_grok_postfix_sendmail_nomatch" , "_grokparsefailure" ]
            add_tag        => [ "_grok_postfix_success" ]
        }
    } else if [syslog_program] =~ /^postfix.*\/smtp$/ {
        grok {
            # patterns_dir   => "/etc/logstash/patterns.d"
            match          => [ "syslog_message", "%{POSTFIX_SMTP}" ]
            tag_on_failure => [ "_grok_postfix_smtp_nomatch" , "_grokparsefailure" ]
            add_tag        => [ "_grok_postfix_success" ]
        }
    } else if [syslog_program] =~ /^postfix.*\/lmtp$/ {
        grok {
            # patterns_dir   => "/etc/logstash/patterns.d"
            match          => [ "syslog_message", "%{POSTFIX_LMTP}" ]
            tag_on_failure => [ "_grok_postfix_lmtp_nomatch" , "_grokparsefailure" ]
            add_tag        => [ "_grok_postfix_success" ]
        }
    } else if [syslog_program] =~ /^postfix.*\/smtpd$/ {
        grok {
            # patterns_dir   => "/etc/logstash/patterns.d"
            match          => [ "syslog_message", "%{POSTFIX_SMTPD}" ]
            tag_on_failure => [ "_grok_postfix_smtpd_nomatch" , "_grokparsefailure" ]
            add_tag        => [ "_grok_postfix_success" ]
        }
    } else if [syslog_program] =~ /^postfix.*\/tlsmgr$/ {
        grok {
            # patterns_dir   => "/etc/logstash/patterns.d"
            match          => [ "syslog_message", "%{POSTFIX_TLSMGR}" ]
            tag_on_failure => [ "_grok_postfix_tlsmgr_nomatch" , "_grokparsefailure" ]
            add_tag        => [ "_grok_postfix_success" ]
        }
    } else if [syslog_program] =~ /^postfix.*\/tlsproxy$/ {
        grok {
            # patterns_dir   => "/etc/logstash/patterns.d"
            match          => [ "syslog_message", "%{POSTFIX_TLSPROXY}" ]
            tag_on_failure => [ "_grok_postfix_tlsproxy_nomatch" , "_grokparsefailure" ]
            add_tag        => [ "_grok_postfix_success" ]
        }
    } else if [syslog_program] =~ /^postfix.*\/trivial-rewrite$/ {
        grok {
            # patterns_dir   => "/etc/logstash/patterns.d"
            match          => [ "syslog_message", "%{POSTFIX_TRIVIAL_REWRITE}" ]
            tag_on_failure => [ "_grok_postfix_trivial_rewrite_nomatch" , "_grokparsefailure" ]
            add_tag        => [ "_grok_postfix_success" ]
        }
    } else if [syslog_program] =~ /^postfix.*\/discard$/ {
        grok {
            # patterns_dir   => "/etc/logstash/patterns.d"
            match          => [ "syslog_message", "%{POSTFIX_DISCARD}" ]
            tag_on_failure => [ "_grok_postfix_discard_nomatch" , "_grokparsefailure" ]
            add_tag        => [ "_grok_postfix_success" ]
        }
    }

    # process key-value data is it exists
    if [postfix_keyvalue_data] {
        kv {
            source       => "postfix_keyvalue_data"
            trim         => "<>,"
            prefix       => "postfix_"
            remove_field => [ "postfix_keyvalue_data" ]
        }

        # some post processing of key-value data
        if [postfix_client] {
            grok {
                patterns_dir   => "/etc/logstash/patterns.d"
                match          => ["postfix_client", "%{POSTFIX_CLIENT_INFO}"]
                tag_on_failure => [ "_grok_kv_postfix_client_nomatch" ]
                remove_field   => [ "postfix_client" ]
            }
        }
        if [postfix_relay] {
            grok {
                patterns_dir   => "/etc/logstash/patterns.d"
                match          => ["postfix_relay", "%{POSTFIX_RELAY_INFO}"]
                tag_on_failure => [ "_grok_kv_postfix_relay_nomatch" ]
                remove_field   => [ "postfix_relay" ]
            }
        }
        if [postfix_delays] {
            grok {
                patterns_dir   => "/etc/logstash/patterns.d"
                match          => ["postfix_delays", "%{POSTFIX_DELAYS}"]
                tag_on_failure => [ "_grok_kv_postfix_delays_nomatch" ]
                remove_field   => [ "postfix_delays" ]
            }
        }
    }

    # Do some data type conversions
    mutate {
        convert => [
            # list of integer fields
            "postfix_anvil_cache_size", "integer",
            "postfix_anvil_conn_count", "integer",
            "postfix_anvil_conn_rate", "integer",
            "postfix_client_port", "integer",
            "postfix_nrcpt", "integer",
            "postfix_postscreen_cache_dropped", "integer",
            "postfix_postscreen_cache_retained", "integer",
            "postfix_postscreen_dnsbl_rank", "integer",
            "postfix_relay_port", "integer",
            "postfix_server_port", "integer",
            "postfix_size", "integer",
            "postfix_status_code", "integer",
            "postfix_termination_signal", "integer",
            "postfix_uid", "integer",

            # list of float fields
            "postfix_delay", "float",
            "postfix_delay_before_qmgr", "float",
            "postfix_delay_conn_setup", "float",
            "postfix_delay_in_qmgr", "float",
            "postfix_delay_transmission", "float",
            "postfix_postscreen_violation_time", "float"
        ]
    }



    if [postfix_client_ip] {
      geoip {
        source => "postfix_client_ip"
        target => "geoip"
        database => "/opt/logstash/vendor/geoip/GeoLiteCity.dat"
        add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
        add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
      }
      mutate {
        convert => [ "[geoip][coordinates]", "float" ]
      }
    } else if [postfix_relay_ip] {
      geoip {
        source => "postfix_relay_ip"
        target => "geoip"
        database => "/opt/logstash/vendor/geoip/GeoLiteCity.dat"
        add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
        add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
      }
      mutate {
        convert => [ "[geoip][coordinates]", "float" ]
      }
    }

    if "_grokparsefailure" not in [tags] {
      mutate {
	remove_field => "@message"
	remove_field => "syslog_message"
        add_tag => "postfixmatch"
      }
    }

    if "_grokparsefailure" in [tags] {
      drop { }
    }

  }
}

